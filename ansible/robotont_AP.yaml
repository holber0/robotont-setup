---
- hosts: robots
  remote_user: "{{ ansible_user }}"

  #Ask for wifi password
  vars_prompt:
  - name: robot_wifi_pass
    prompt: "Password for the WiFi:"
    private: no

  tasks:
  - name: Set google nameserver for apt.
    copy:
      src: resources/resolv.conf
      dest: /etc/resolv.conf
      owner: root
      group: root
      mode: '0644'
    become: true

  - name: Installing hostapd, and dnsmasq packages
    apt:
      name: "{{ packages }}"
    vars:
      packages:
        - hostapd
        - dnsmasq
    become: true

  - name: Configuring /etc/network/interfaces
    template:
      src: interfaces_AP.j2
      dest: /etc/network/interfaces
      owner: root
      group: root
      mode: '0644'
    become: true

  - name: Configuring hostapd
    template:
      src: hostapd.conf.j2
      dest: /etc/hostapd/hostapd.conf
      owner: root
      group: root
      mode: '0600'
    become: true
      
  - name: Pointing hostapd to the correct config file
    lineinfile:
      path: /etc/default/hostapd
      line: 'DAEMON_CONF="/etc/hostapd/hostapd.conf"'
    become: true

  - name: Configuring dnsmasq
    template:
      src: dnsmasq.conf.j2
      dest: /etc/dnsmasq.conf
      owner: root
      group: root
      mode: '0644'
    become: true

  - name: Disable builtin NetworkManager services
    service:
      name: "{{ item }}"
      #state: stopped
      enabled: no
    loop:
      - NetworkManager
      - NetworkManager-dispatcher
    become: true

  - name: Mask builtin NetworkManager to prevent re-enabling
    command: systemctl mask {{ item }}
    loop:
      - NetworkManager
      - NetworkManager-dispatcher
    become: true

    #  - name: Remove network-manager
    #    apt:
    #      name: network-manager
    #      state: absent
    #      purge: yes
    #    become: true

  - name: Unmask hostapd
    command: systemctl unmask hostapd
    become: true

  - name: Disabling systemd-resolve.service
    service:
      name: systemd-resolved
      state: stopped
      enabled: no
    become: true

  - name: Set up new resolv.conf
    copy:
      src: resources/resolv.conf
      dest: /etc/resolv.conf
      owner: root
      group: root
      mode: '0644'
    become: true

  - name: Restarting dnsmasq and hostapd services
    service:
      name: "{{ item }}"
      #      state: restarted
      enabled: yes
    loop:
      - hostapd
      - dnsmasq
    become: true

#  - name: Unconditionally reboot the machine with all defaults
#    reboot:
#    become: yes
